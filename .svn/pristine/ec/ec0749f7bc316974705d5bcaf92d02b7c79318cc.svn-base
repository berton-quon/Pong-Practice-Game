//******************************************************************
//Berton Quon CMPE 1300 Lab 2
//******************************************************************

using System;
using GDIDrawer;
using System.Drawing;
using System.Text;
using System.Windows.Forms;


namespace Lab_2
{
    class Program
    { 
        static void Main(string[] args)
        {
            int borderTop;              //creates top border
            int borderRight;            //creates right border
            int borderBottom;           //creates bottom border
            int xBall;                  //x position of ball
            int yBall;                  //y position of ball
            int xStart;                 //starting direction of xBall
            int yStart;                 //starting direction of yBall
            int xVel = 1;               //x velocity of ball
            int yVel = 1;               //y velocity of ball
            int startClick = 0;         //
            int noStart = 0;
            


            //************************************************************************
            //create game window
            CDrawer canvas = new CDrawer();
            canvas.Scale = 5;
            //create top border
            for (borderTop = 0; borderTop < 160; borderTop++)
            {
                canvas.SetBBScaledPixel(borderTop, 0, Color.Blue);
            }
            //create right border
            for (borderRight = 0; borderRight < 120; borderRight++)
            {
                canvas.SetBBScaledPixel(159, borderRight, Color.Blue);
            }
            //create bottom border
            for (borderBottom = 0; borderBottom < 160; borderBottom++)
            {
                canvas.SetBBScaledPixel(borderBottom, 119, Color.Blue);
            }
            //*************************************************************************
            //add clickable start button
            canvas.AddRectangle(65, 55, 30, 10, Color.Green);
            canvas.AddText("Click to start", 12, 65, 55, 30, 10, Color.White);
            Point pCoord;
            do
            {
                bool resetGame = canvas.GetLastMouseLeftClick(out pCoord);          //need to make ONLY rectangle clickable 
                if (resetGame)                                                      
                {
                    ++startClick;
                }
                else
                    noStart++;
            }
            while (startClick < 1);

            //generate ball at random location (located on R side of screen to start further away from paddle)
            Random rand = new Random();
            xBall = rand.Next(50, 159); //randomized x spawn location of ball
            yBall = rand.Next(1, 119); //randomized y spawn location of ball
            xStart = rand.Next(1, 3); //determine initial x direction of ball
            yStart = rand.Next(1, 3); //determine initial y direction of ball


            while (xBall > 0 && xBall < 160)
            {
                canvas.Clear();
                canvas.AddRectangle(xBall, yBall, 2, 2, Color.Red);
                System.Threading.Thread.Sleep(20);
                switch (xStart)
                {
                    case 1: //ball moves toward right at start
                        xBall = xBall + xVel;
                        break;
                    case 2: //ball moves toward left at start
                        xBall = xBall - xVel;
                        break;
                    default:
                        break;
                }

                switch (yStart)
                {
                    case 1: //ball moves downwards at start
                        yBall = yBall + yVel; 
                        break;
                    case 2: //ball moves upwards at start
                        yBall = yBall - yVel;
                        break;
                    default:
                        break;
                }
            }
            
            //need to add randomness of x and y directions of ball - random number generater with range of 2?

            //if criteria for when xBall = 160
            //if criteria for when yBall = 0 or 120


            //add criteria for when it 'hits' walls and following action

            //if criteria for when xBall = 0


            //location = border locations 
            //change direction

            //add paddle using Y movement of mouse

            //integrate scoring system

            //display score and option to play again or quit



            Console.ReadLine();

  
            
        }
    }
}
